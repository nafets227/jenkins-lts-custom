---
name: Build with latest Jenkins+Plugins Version

on:
  push:
    branches: 
      - '*'
  schedule:
    - cron: "0 0 * * *"

jobs:
  jenkins-lts-custom:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Configure Git User Name
        run: |
          git config user.name "JenkinsUpdater[bot]"
          git config user.email "132197+jenkinsupdater[bot]@users.noreply.github.com"

      - name: Auto Update our components
        id: autoupdate
        run: |
          pip3 install yq &&
          .github/workflows/autoupdate.sh

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        if: ${{ steps.autoupdate.outputs.newVersion != '' }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: |
            type=raw,${{ steps.autoupdate.outputs.newVersion }}

      - name: Log into registry ghcr.io
        if: ${{ steps.autoupdate.outputs.newVersion != '' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: ${{ steps.autoupdate.outputs.newVersion != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
